{"version":3,"sources":["components/NavBar/NavBar.js","components/AppLayout/AppLayout.js","components/FileName/FileName.js","components/Editor/Editor.js","components/Preview/Preview.js","components/WorkArea/WorkArea.js","App.js","index.js"],"names":["NavBar","className","Group","align","Alignment","LEFT","icon","iconSize","Heading","RIGHT","href","target","text","AppLayout","children","FileName","content","position","targetClassName","leftIcon","defaultValue","fill","large","readOnly","showdown","require","setFlavor","Editor","setText","setHTMLText","converter","Converter","simpleLineBreaks","wrap","value","onChange","e","html","makeHtml","placeholder","growVertically","Preview","dangerouslySetInnerHTML","__html","WorkArea","useState","HTMLText","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAsCeA,EA7BA,WACX,OACI,yBAAKC,UAAU,eACX,kBAAC,SAAD,CAAQA,UAAU,YACd,kBAAC,SAAOC,MAAR,CAAcC,MAAOC,YAAUC,MAC3B,kBAAC,OAAD,CAAMC,KAAK,iBAAiBC,SAAS,SACrC,kBAAC,UAAD,MACA,kBAAC,SAAOC,QAAR,8BAEJ,kBAAC,SAAON,MAAR,CAAcC,MAAOC,YAAUK,OAC3B,kBAAC,eAAD,CACIC,KAAK,yCACLC,OAAO,SACPL,KAAK,OACLM,KAAK,mBAET,kBAAC,UAAD,MACA,kBAAC,eAAD,CACIF,KAAK,0CACLC,OAAO,SACPL,KAAK,OACLM,KAAK,iBClBdC,EATG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OACI,yBAAKb,UAAU,YACX,kBAAC,EAAD,MACCa,I,QCiBEC,G,OApBE,WACb,OACI,yBAAKd,UAAU,iBACX,kBAAC,UAAD,CACIe,QAAQ,8CACRC,SAAS,QACTC,gBAAgB,aAEhB,kBAAC,aAAD,CACIC,SAAS,WACTC,aAAa,YACbC,MAAM,EACNC,OAAO,EACPC,UAAU,QCdxBC,G,OAAWC,EAAQ,MACzBD,EAASE,UAAU,UAEnB,IAwBeC,EAxBA,SAAC,GAAoC,IAAlCf,EAAiC,EAAjCA,KAAMgB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YACvBC,EAAY,IAAIN,EAASO,UAAU,CAAEC,kBAAkB,IAS7D,OACI,yBAAK/B,UAAU,eACX,kBAAC,WAAD,CACIoB,MAAM,EACNY,KAAM,OACNC,MAAOtB,EACPuB,SAba,SAACC,GACtB,IAAMxB,EAAOwB,EAAEzB,OAAOuB,MAChBG,EAAOP,EAAUQ,SAAS1B,GAChCiB,EAAYQ,GACZT,EAAQhB,IAUA2B,YAAY,mDACZC,gBAAgB,MCVjBC,G,OAXC,SAAC,GAAc,IAAZ7B,EAAW,EAAXA,KACf,OACI,yBAAKX,UAAU,gBACX,yBACIA,UAAU,UACVyC,wBAAyB,CAAEC,OAAQ/B,QCWpCgC,G,OAbE,WAAO,IAAD,EACKC,mBAAS,IADd,mBACZjC,EADY,KACNgB,EADM,OAEaiB,mBAAS,IAFtB,mBAEZC,EAFY,KAEFjB,EAFE,KAInB,OACI,yBAAK5B,UAAU,iBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQW,KAAMA,EAAMgB,QAASA,EAASC,YAAaA,IACnD,kBAAC,EAAD,CAASjB,KAAMkC,OCFZC,MARf,WACI,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,Q,qBCAZC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.766079c8.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Alignment,\n    AnchorButton,\n    Divider,\n    Icon,\n    Navbar,\n} from '@blueprintjs/core';\n\nconst NavBar = () => {\n    return (\n        <div className='navbar-wrap'>\n            <Navbar className='bp3-dark'>\n                <Navbar.Group align={Alignment.LEFT}>\n                    <Icon icon='git-new-branch' iconSize='24px' />\n                    <Divider />\n                    <Navbar.Heading>README - Live Editor</Navbar.Heading>\n                </Navbar.Group>\n                <Navbar.Group align={Alignment.RIGHT}>\n                    <AnchorButton\n                        href='https://github.com/isoyute/edit-readme'\n                        target='_blank'\n                        icon='link'\n                        text='View on GitHub'\n                    />\n                    <Divider />\n                    <AnchorButton\n                        href='https://www.linkedin.com/in/tudor-lupu/'\n                        target='_blank'\n                        icon='user'\n                        text='LinkedIn'\n                    />\n                </Navbar.Group>\n            </Navbar>\n        </div>\n    );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport NavBar from '../NavBar/NavBar';\n\nconst AppLayout = ({ children }) => {\n    return (\n        <div className='app-wrap'>\n            <NavBar />\n            {children}\n        </div>\n    );\n};\n\nexport default AppLayout;\n","import React from 'react';\nimport { InputGroup, Tooltip } from '@blueprintjs/core';\nimport './FileName.css';\n\nconst FileName = () => {\n    return (\n        <div className='filename-wrap'>\n            <Tooltip\n                content='The file name is for display purposes only.'\n                position='right'\n                targetClassName='max-width'\n            >\n                <InputGroup\n                    leftIcon='git-repo'\n                    defaultValue='README.md'\n                    fill={true}\n                    large={true}\n                    readOnly={true}\n                />\n            </Tooltip>\n        </div>\n    );\n};\n\nexport default FileName;\n","import React from 'react';\nimport { TextArea } from '@blueprintjs/core';\nimport './Editor.css';\nconst showdown = require('showdown');\nshowdown.setFlavor('github');\n\nconst Editor = ({ text, setText, setHTMLText }) => {\n    const converter = new showdown.Converter({ simpleLineBreaks: false });\n\n    const handleTextChange = (e) => {\n        const text = e.target.value;\n        const html = converter.makeHtml(text);\n        setHTMLText(html);\n        setText(text);\n    };\n\n    return (\n        <div className='editor-wrap'>\n            <TextArea\n                fill={true}\n                wrap={'true'}\n                value={text}\n                onChange={handleTextChange}\n                placeholder='Start typing here to create your README file ...'\n                growVertically={false}\n            />\n        </div>\n    );\n};\n\nexport default Editor;\n","import React from 'react';\nimport './Preview.css';\n\nconst Preview = ({ text }) => {\n    return (\n        <div className='preview-wrap'>\n            <div\n                className='preview'\n                dangerouslySetInnerHTML={{ __html: text }}\n            />\n        </div>\n    );\n};\n\nexport default Preview;\n","import React, { useState } from 'react';\nimport FileName from '../FileName/FileName';\nimport Editor from '../Editor/Editor';\nimport Preview from '../Preview/Preview';\nimport './WorkArea.css';\n\nconst WorkArea = () => {\n    const [text, setText] = useState('');\n    const [HTMLText, setHTMLText] = useState('');\n\n    return (\n        <div className='workarea-wrap'>\n            <FileName />\n            <Editor text={text} setText={setText} setHTMLText={setHTMLText} />\n            <Preview text={HTMLText} />\n        </div>\n    );\n};\n\nexport default WorkArea;\n","import React from 'react';\nimport AppLayout from './components/AppLayout/AppLayout';\nimport WorkArea from './components/WorkArea/WorkArea';\n\nfunction App() {\n    return (\n        <AppLayout>\n            <WorkArea />\n        </AppLayout>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}